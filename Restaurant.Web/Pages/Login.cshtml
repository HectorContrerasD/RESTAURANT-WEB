@page
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>Login</title>
    <link rel="stylesheet" href="~/CSS/Login.css" />
</head>
<body>
    <div class="contenedor">
        <img src="~/Assets/LogoRestaurante2.png" class="logo" />
        <div class="formulario">
            <input type="text" placeholder="Usuario" class="txtusuario" id="username" />
            <input type="password" placeholder="Contraseña" class="pswUsuario" id="password" />
            <input type="button" value="Iniciar sesión" class="button" id="loginBtn" />
            <div id="mensaje" class="mensaje-error" style="display: none;"></div>
            <div id="loading" class="loading" style="display: none;">Iniciando sesión...</div>
        </div>
    </div>
</body>
</html>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Verificar si ya está logueado
            const token = localStorage.getItem('accessToken');
            if (token) {
                // Si ya tiene token, redirigir a Pedidos
                window.location.href = '/Pedidos';
                return;
            }

            const loginBtn = document.getElementById('loginBtn');
            const usernameInput = document.getElementById('username');
            const passwordInput = document.getElementById('password');
            const mensajeDiv = document.getElementById('mensaje');
            const loadingDiv = document.getElementById('loading');

            // Manejar Enter key en los inputs
            [usernameInput, passwordInput].forEach(input => {
                input.addEventListener('keypress', function(e) {
                    if (e.key === 'Enter') {
                        login();
                    }
                });
            });

            // Manejar click del botón
            loginBtn.addEventListener('click', login);

            async function login() {
                const username = usernameInput.value.trim();
                const password = passwordInput.value.trim();

                // Validaciones básicas
                if (!username) {
                    mostrarMensaje('Por favor, ingrese su usuario', 'error');
                    usernameInput.focus();
                    return;
                }
                
                if (!password) {
                    mostrarMensaje('Por favor, ingrese su contraseña', 'error');
                    passwordInput.focus();
                    return;
                }

                // Mostrar loading
                loginBtn.disabled = true;
                loadingDiv.style.display = 'block';
                mensajeDiv.style.display = 'none';

                try {
                    const response = await fetch('https://restaurant-api.websitos256.com/api/auth/login', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                       
                        body: JSON.stringify({
                            username: username,
                            password: password
                        })
                    });

                    if (response.ok) {
                        const data = await response.json();
                        
                        // Guardar access token en localStorage
                        localStorage.setItem('accessToken', data.accessToken);
                        
                        // Guardar información adicional si la necesitas
                        localStorage.setItem('loginTime', new Date().getTime().toString());
                        
                        mostrarMensaje('Inicio de sesión exitoso. Redirigiendo...', 'success');
                        
                        // Redirigir después de un breve delay
                        setTimeout(() => {
                            window.location.href = '/Pedidos';
                        }, 1000);

                    } else {
                        let errorMessage = 'Error al iniciar sesión';
                        
                        if (response.status === 401) {
                            errorMessage = 'Usuario o contraseña incorrectos';
                        } else if (response.status === 400) {
                            // Manejar errores de validación
                            try {
                                const errorData = await response.json();
                                if (errorData.errors && Array.isArray(errorData.errors)) {
                                    errorMessage = errorData.errors.join(', ');
                                } else if (errorData.message) {
                                    errorMessage = errorData.message;
                                } else if (errorData.title) {
                                    errorMessage = errorData.title;
                                }
                            } catch (e) {
                                errorMessage = 'Datos inválidos. Verifique la información ingresada';
                            }
                        } else if (response.status >= 500) {
                            errorMessage = 'Error del servidor. Intente más tarde';
                        } else {
                            // Para otros códigos de error
                            try {
                                const errorData = await response.json();
                                errorMessage = errorData.message || errorData.title || 'Error desconocido';
                            } catch (e) {
                                errorMessage = `Error ${response.status}. Intente nuevamente`;
                            }
                        }
                        
                        mostrarMensaje(errorMessage, 'error');
                    }
                } catch (error) {
                    console.error('Error de conexión:', error);
                    if (error.name === 'TypeError' && error.message.includes('fetch')) {
                        mostrarMensaje('No se pudo conectar con el servidor. Verifique su conexión', 'error');
                    } else {
                        mostrarMensaje('Error de conexión. Intente nuevamente', 'error');
                    }
                } finally {
                    // Ocultar loading y habilitar botón
                    loginBtn.disabled = false;
                    loadingDiv.style.display = 'none';
                }
            }

            function mostrarMensaje(mensaje, tipo) {
                mensajeDiv.textContent = mensaje;
                mensajeDiv.className = `mensaje-${tipo}`;
                mensajeDiv.style.display = 'block';
                
                // Auto-ocultar mensaje después de 5 segundos si es error
                if (tipo === 'error') {
                    setTimeout(() => {
                        mensajeDiv.style.display = 'none';
                    }, 5000);
                }
            }
        });
    </script>