@page
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Cocina</title>
    <link rel="stylesheet" href="~/CSS/StyleCocinero.css">
</head>

<body>
    <h1 class="titulo-principal">Pedidos en Cocina</h1>

    <div id="loading" class="loading">Cargando pedidos...</div>
    <div id="error" class="error" style="display: none;"></div>
    <div id="pedidos-container"></div>
</body>
</html>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            cargarPedidos();

        });

        function getProductoImage(nombreProducto) {
            const nombre = nombreProducto.toLowerCase();
           
            if (nombre.includes('sencilla')) {
                return '/assets/HamburguesaSencilla2.png';
            } else if (nombre.includes('doble')) {
                return '/assets/HamburguesaDoble2.png';
            } else if (nombre.includes('queso')) {
                return '/assets/HamburguesaConQueso2.png';
            }
         
            else if (nombre.includes('papas chicas')) {
                return '/assets/PapasChicas.png';
            } else if (nombre.includes('papas grandes')) {
                return '/assets/PapasGrandes.png';
            }
            // Refrescos (Categoría 3)
            else if (nombre.includes('refresco chico')) {
                return '/assets/RefrescoChico.png';
            } else if (nombre.includes('refresco grande') || nombre.includes('regresco grande')) {
                return '/assets/RefrescoGrande.png';
            }
            // Fallbacks más generales
            else if (nombre.includes('hamburguesa')) {
                return '/assets/HamburguesaSencilla2.png';
            } else if (nombre.includes('papas')) {
                return '/assets/PapasChicas.png';
            } else if (nombre.includes('refresco') || nombre.includes('regresco') || nombre.includes('bebida')) {
                return '/assets/RefrescoChico.png';
            }
            // Imagen por defecto
            return '/assets/HamburguesaSencilla2.png';
        }

        async function cargarPedidos() {
            const token = localStorage.getItem('accessToken');
            if (!token) {
                window.location.href = '/Login';
                return;
            }

            try {
                const response = await fetch('https://restaurant-api.websitos256.com/api/pedido', {
                    method: 'GET',
                    headers: {
                        'Authorization': `Bearer ${token}`,
                        'Content-Type': 'application/json'
                    }
                });

                if (response.ok) {
                    const pedidos = await response.json();
                    mostrarPedidos(pedidos);
                    document.getElementById('loading').style.display = 'none';
                    document.getElementById('error').style.display = 'none';
                } else if (response.status === 401) {
                    localStorage.removeItem('accessToken');
                    window.location.href = '/Login';
                } else {
                    throw new Error('Error al cargar pedidos');
                }
            } catch (error) {
                console.error('Error:', error);
                document.getElementById('loading').style.display = 'none';
                document.getElementById('error').style.display = 'block';
                document.getElementById('error').textContent = 'Error al cargar los pedidos. Reintentando...';
            }
        }

        function mostrarPedidos(pedidos) {
            const container = document.getElementById('pedidos-container');

            // Agrupar pedidos por ticket
            const pedidosPorTicket = {};
            pedidos.forEach(pedido => {
                const ticketId = pedido.ticket.id;
                if (!pedidosPorTicket[ticketId]) {
                    pedidosPorTicket[ticketId] = {
                        ticket: pedido.ticket,
                        pedidos: [],
                        fecha: pedido.createdAt
                    };
                }
                pedidosPorTicket[ticketId].pedidos.push(pedido);
            });

            // Generar HTML
            let html = '';
            Object.keys(pedidosPorTicket).forEach(ticketId => {
                const grupo = pedidosPorTicket[ticketId];
                const fecha = new Date(grupo.fecha).toLocaleDateString('es-ES');

                html += `
                    <div class="pedido-container">
                        <div class="encabezados">
                            <h2 class="nombre-mesa">MESA ${grupo.ticket.mesa.numero}</h2>
                            <h2 class="numero-ticket">TICKET #${grupo.ticket.id}</h2>
                        </div>
                        <ul class="lista-pedidos">
                `;

                grupo.pedidos.forEach(pedido => {
                    const descripcion = pedido.variante ? pedido.variante.nombre : '';
                    const notas = pedido.notas ? pedido.notas : '';
                    const descripcionCompleta = [descripcion, notas].filter(Boolean).join(' - ');

                    html += `
                        <li class="item-pedido">
                            <img src="${getProductoImage(pedido.producto.nombre)}" class="imagen-producto" />
                            <div class="detalles-item">
                                <p class="nombre-producto">${pedido.producto.nombre}</p>
                                <p class="descripcion">${descripcionCompleta}</p>
                                <p class="cantidad">Cantidad: ${pedido.cantidad}</p>
                                <div class="botones-estado">
                                    <button class="estado-btn en-preparacion" data-pedido-id="${pedido.id}" onclick="cambiarEstado(${pedido.id}, 'preparacion')">
                                        En preparación
                                    </button>
                                    <button class="estado-btn listo" data-pedido-id="${pedido.id}" onclick="cambiarEstado(${pedido.id}, 'listo')" disabled>
                                        Listo
                                    </button>
                                </div>
                            </div>
                        </li>
                    `;
                });

                html += `
                        </ul>
                        <p class="fecha">Fecha: ${fecha}</p>
                    </div>
                `;
            });

            container.innerHTML = html;
        }

        async function cambiarEstado(pedidoId, estado) {
            const token = localStorage.getItem('accessToken');
            if (!token) {
                window.location.href = '/Login';
                return;
            }

            const url = estado === 'preparacion'
                ? `https://restaurant-api.websitos256.com/api/pedido/${pedidoId}/preparacion`
                : `https://restaurant-api.websitos256.com/api/pedido/${pedidoId}/listo`;

            try {
                const response = await fetch(url, {
                    method: 'PUT',
                    headers: {
                        'Authorization': `Bearer ${token}`,
                        'Content-Type': 'application/json'
                    }
                });

                if (response.ok) {
                    // Actualizar el estado visual de los botones
                    const preparacionBtn = document.querySelector(`[data-pedido-id="${pedidoId}"].en-preparacion`);
                    const listoBtn = document.querySelector(`[data-pedido-id="${pedidoId}"].listo`);

                    if (estado === 'preparacion') {
                        preparacionBtn.classList.add('activo');
                        preparacionBtn.disabled = true;
                        listoBtn.disabled = false;
                    } else if (estado === 'listo') {
                        listoBtn.classList.add('activo');
                        listoBtn.disabled = true;
                    }
                } else if (response.status === 401) {
                    localStorage.removeItem('accessToken');
                    window.location.href = '/Login';
                } else {
                    console.error('Error al cambiar estado');
                }
            } catch (error) {
                console.error('Error:', error);
                alert('Error al cambiar el estado del pedido');
            }
        }
    </script>
